# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from typing import (
	Iterable as typing___Iterable,
	List as typing___List,
	NewType as typing___NewType,
	Optional as typing___Optional,
	Text as typing___Text,
	Tuple as typing___Tuple,
	Union as typing___Union,
	cast as typing___cast,
)

from google.protobuf.descriptor import (
	Descriptor as google___protobuf___descriptor___Descriptor,
	EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
	FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)
from google.protobuf.internal.containers import (
	RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)
from google.protobuf.message import (
	Message as google___protobuf___message___Message,
)
from typing_extensions import (
	Literal as typing_extensions___Literal,
)

from opentelemetry.proto import (
	Resource as opentelemetry___proto___resource___v1___resource_pb2___Resource,
)
from opentelemetry.proto.common import (
	AnyValue as opentelemetry___proto___common___v1___common_pb2___AnyValue,
	InstrumentationLibrary as opentelemetry___proto___common___v1___common_pb2___InstrumentationLibrary,
	KeyValue as opentelemetry___proto___common___v1___common_pb2___KeyValue,
)

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

SeverityNumberValue = typing___NewType('SeverityNumberValue', builtin___int)
type___SeverityNumberValue = SeverityNumberValue
class SeverityNumber(object):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> SeverityNumberValue: ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List[SeverityNumberValue]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, SeverityNumberValue]]: ...
    UNDEFINED_SEVERITY_NUMBER = typing___cast(SeverityNumberValue, 0)
    TRACE = typing___cast(SeverityNumberValue, 1)
    TRACE2 = typing___cast(SeverityNumberValue, 2)
    TRACE3 = typing___cast(SeverityNumberValue, 3)
    TRACE4 = typing___cast(SeverityNumberValue, 4)
    DEBUG = typing___cast(SeverityNumberValue, 5)
    DEBUG2 = typing___cast(SeverityNumberValue, 6)
    DEBUG3 = typing___cast(SeverityNumberValue, 7)
    DEBUG4 = typing___cast(SeverityNumberValue, 8)
    INFO = typing___cast(SeverityNumberValue, 9)
    INFO2 = typing___cast(SeverityNumberValue, 10)
    INFO3 = typing___cast(SeverityNumberValue, 11)
    INFO4 = typing___cast(SeverityNumberValue, 12)
    WARN = typing___cast(SeverityNumberValue, 13)
    WARN2 = typing___cast(SeverityNumberValue, 14)
    WARN3 = typing___cast(SeverityNumberValue, 15)
    WARN4 = typing___cast(SeverityNumberValue, 16)
    ERROR = typing___cast(SeverityNumberValue, 17)
    ERROR2 = typing___cast(SeverityNumberValue, 18)
    ERROR3 = typing___cast(SeverityNumberValue, 19)
    ERROR4 = typing___cast(SeverityNumberValue, 20)
    FATAL = typing___cast(SeverityNumberValue, 21)
    FATAL2 = typing___cast(SeverityNumberValue, 22)
    FATAL3 = typing___cast(SeverityNumberValue, 23)
    FATAL4 = typing___cast(SeverityNumberValue, 24)
UNDEFINED_SEVERITY_NUMBER = typing___cast(SeverityNumberValue, 0)
TRACE = typing___cast(SeverityNumberValue, 1)
TRACE2 = typing___cast(SeverityNumberValue, 2)
TRACE3 = typing___cast(SeverityNumberValue, 3)
TRACE4 = typing___cast(SeverityNumberValue, 4)
DEBUG = typing___cast(SeverityNumberValue, 5)
DEBUG2 = typing___cast(SeverityNumberValue, 6)
DEBUG3 = typing___cast(SeverityNumberValue, 7)
DEBUG4 = typing___cast(SeverityNumberValue, 8)
INFO = typing___cast(SeverityNumberValue, 9)
INFO2 = typing___cast(SeverityNumberValue, 10)
INFO3 = typing___cast(SeverityNumberValue, 11)
INFO4 = typing___cast(SeverityNumberValue, 12)
WARN = typing___cast(SeverityNumberValue, 13)
WARN2 = typing___cast(SeverityNumberValue, 14)
WARN3 = typing___cast(SeverityNumberValue, 15)
WARN4 = typing___cast(SeverityNumberValue, 16)
ERROR = typing___cast(SeverityNumberValue, 17)
ERROR2 = typing___cast(SeverityNumberValue, 18)
ERROR3 = typing___cast(SeverityNumberValue, 19)
ERROR4 = typing___cast(SeverityNumberValue, 20)
FATAL = typing___cast(SeverityNumberValue, 21)
FATAL2 = typing___cast(SeverityNumberValue, 22)
FATAL3 = typing___cast(SeverityNumberValue, 23)
FATAL4 = typing___cast(SeverityNumberValue, 24)
type___SeverityNumber = SeverityNumber

LogRecordFlagsValue = typing___NewType('LogRecordFlagsValue', builtin___int)
type___LogRecordFlagsValue = LogRecordFlagsValue
class LogRecordFlags(object):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> LogRecordFlagsValue: ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List[LogRecordFlagsValue]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, LogRecordFlagsValue]]: ...
    UNDEFINED_LOG_RECORD_FLAG = typing___cast(LogRecordFlagsValue, 0)
    TRACE_FLAGS_MASK = typing___cast(LogRecordFlagsValue, 255)
UNDEFINED_LOG_RECORD_FLAG = typing___cast(LogRecordFlagsValue, 0)
TRACE_FLAGS_MASK = typing___cast(LogRecordFlagsValue, 255)
type___LogRecordFlags = LogRecordFlags

class ResourceLogs(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def resource(self) -> opentelemetry___proto___resource___v1___resource_pb2___Resource: ...

    @property
    def instrumentation_library_logs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___InstrumentationLibraryLogs]: ...

    def __init__(self,
        *,
        resource : typing___Optional[opentelemetry___proto___resource___v1___resource_pb2___Resource] = None,
        instrumentation_library_logs : typing___Optional[typing___Iterable[type___InstrumentationLibraryLogs]] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ResourceLogs: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> ResourceLogs: ...
    def HasField(self, field_name: typing_extensions___Literal[u"resource",b"resource"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"instrumentation_library_logs",b"instrumentation_library_logs",u"resource",b"resource"]) -> None: ...
type___ResourceLogs = ResourceLogs

class InstrumentationLibraryLogs(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def instrumentation_library(self) -> opentelemetry___proto___common___v1___common_pb2___InstrumentationLibrary: ...

    @property
    def logs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LogRecord]: ...

    def __init__(self,
        *,
        instrumentation_library : typing___Optional[opentelemetry___proto___common___v1___common_pb2___InstrumentationLibrary] = None,
        logs : typing___Optional[typing___Iterable[type___LogRecord]] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> InstrumentationLibraryLogs: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> InstrumentationLibraryLogs: ...
    def HasField(self, field_name: typing_extensions___Literal[u"instrumentation_library",b"instrumentation_library"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"instrumentation_library",b"instrumentation_library",u"logs",b"logs"]) -> None: ...
type___InstrumentationLibraryLogs = InstrumentationLibraryLogs

class LogRecord(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    time_unix_nano: builtin___int = ...
    severity_number: type___SeverityNumberValue = ...
    severity_text: typing___Text = ...
    name: typing___Text = ...
    dropped_attributes_count: builtin___int = ...
    flags: builtin___int = ...
    trace_id: builtin___bytes = ...
    span_id: builtin___bytes = ...

    @property
    def body(self) -> opentelemetry___proto___common___v1___common_pb2___AnyValue: ...

    @property
    def attributes(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[opentelemetry___proto___common___v1___common_pb2___KeyValue]: ...

    def __init__(self,
        *,
        time_unix_nano : typing___Optional[builtin___int] = None,
        severity_number : typing___Optional[type___SeverityNumberValue] = None,
        severity_text : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        body : typing___Optional[opentelemetry___proto___common___v1___common_pb2___AnyValue] = None,
        attributes : typing___Optional[typing___Iterable[opentelemetry___proto___common___v1___common_pb2___KeyValue]] = None,
        dropped_attributes_count : typing___Optional[builtin___int] = None,
        flags : typing___Optional[builtin___int] = None,
        trace_id : typing___Optional[builtin___bytes] = None,
        span_id : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> LogRecord: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> LogRecord: ...
    def HasField(self, field_name: typing_extensions___Literal[u"body",b"body"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"attributes",b"attributes",u"body",b"body",u"dropped_attributes_count",b"dropped_attributes_count",u"flags",b"flags",u"name",b"name",u"severity_number",b"severity_number",u"severity_text",b"severity_text",u"span_id",b"span_id",u"time_unix_nano",b"time_unix_nano",u"trace_id",b"trace_id"]) -> None: ...
type___LogRecord = LogRecord
